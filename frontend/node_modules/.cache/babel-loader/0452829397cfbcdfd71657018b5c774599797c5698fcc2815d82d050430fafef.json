{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\ibmApp2\\\\frontend\\\\src\\\\pages\\\\Question\\\\Edit.js\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TextControlsExample() {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      as: \"h5\",\n      children: \"Featured\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: \"Special title treatment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: \"A network may have three types of layers: input layers that take raw input from the domain, hidden layers that take input from another layer and pass output to another layer, and output layers that make a prediction. All hidden layers typically use the same activation function. The output layer will typically use a different activation function from the hidden layers and is dependent upon the type of prediction required by the model. Activation functions are also typically differentiable, meaning the first-order derivative can be calculated for a given input value. This is required given that neural networks are typically trained using the backpropagation of error algorithm that requires the derivative of prediction error in order to update the weights of the model. There are many different types of activation functions used in neural networks, although perhaps only a small number of functions used in practice for hidden and output layers.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"exampleForm.ControlTextarea1\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Example textarea\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            rows: 7\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        children: \"upDate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_c = TextControlsExample;\nexport default TextControlsExample;\nvar _c;\n$RefreshReg$(_c, \"TextControlsExample\");","map":{"version":3,"names":["Form","Button","Card","jsxDEV","_jsxDEV","TextControlsExample","children","Header","as","fileName","_jsxFileName","lineNumber","columnNumber","Body","Title","Text","Group","className","controlId","Label","Control","rows","variant","_c","$RefreshReg$"],"sources":["C:/Users/dell/ibmApp2/frontend/src/pages/Question/Edit.js"],"sourcesContent":["import Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nfunction TextControlsExample() {\r\n  return (\r\n    <Card >\r\n      <Card.Header as=\"h5\">Featured</Card.Header>\r\n      <Card.Body>\r\n        <Card.Title>Special title treatment</Card.Title>\r\n        <Card.Text>\r\n          A network may have three types of layers: input layers that take raw\r\n          input from the domain, hidden layers that take input from another\r\n          layer and pass output to another layer, and output layers that make a\r\n          prediction. All hidden layers typically use the same activation\r\n          function. The output layer will typically use a different activation\r\n          function from the hidden layers and is dependent upon the type of\r\n          prediction required by the model. Activation functions are also\r\n          typically differentiable, meaning the first-order derivative can be\r\n          calculated for a given input value. This is required given that neural\r\n          networks are typically trained using the backpropagation of error\r\n          algorithm that requires the derivative of prediction error in order to\r\n          update the weights of the model. There are many different types of\r\n          activation functions used in neural networks, although perhaps only a\r\n          small number of functions used in practice for hidden and output\r\n          layers.\r\n        </Card.Text>\r\n        <Form>\r\n          <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n            <Form.Label>Example textarea</Form.Label>\r\n            <Form.Control as=\"textarea\" rows={7} />\r\n          </Form.Group>\r\n        </Form>\r\n        <Button variant=\"primary\">upDate</Button>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default TextControlsExample;\r\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,sBAAsB;AACvC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,IAAI,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,mBAAmBA,CAAA,EAAG;EAC7B,oBACED,OAAA,CAACF,IAAI;IAAAI,QAAA,gBACHF,OAAA,CAACF,IAAI,CAACK,MAAM;MAACC,EAAE,EAAC,IAAI;MAAAF,QAAA,EAAC;IAAQ;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC,eAC3CR,OAAA,CAACF,IAAI,CAACW,IAAI;MAAAP,QAAA,gBACRF,OAAA,CAACF,IAAI,CAACY,KAAK;QAAAR,QAAA,EAAC;MAAuB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eAChDR,OAAA,CAACF,IAAI,CAACa,IAAI;QAAAT,QAAA,EAAC;MAgBX;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAAC,eACZR,OAAA,CAACJ,IAAI;QAAAM,QAAA,eACHF,OAAA,CAACJ,IAAI,CAACgB,KAAK;UAACC,SAAS,EAAC,MAAM;UAACC,SAAS,EAAC,8BAA8B;UAAAZ,QAAA,gBACnEF,OAAA,CAACJ,IAAI,CAACmB,KAAK;YAAAb,QAAA,EAAC;UAAgB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACzCR,OAAA,CAACJ,IAAI,CAACoB,OAAO;YAACZ,EAAE,EAAC,UAAU;YAACa,IAAI,EAAE;UAAE;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACPR,OAAA,CAACH,MAAM;QAACqB,OAAO,EAAC,SAAS;QAAAhB,QAAA,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEX;AAACW,EAAA,GAjCQlB,mBAAmB;AAmC5B,eAAeA,mBAAmB;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}