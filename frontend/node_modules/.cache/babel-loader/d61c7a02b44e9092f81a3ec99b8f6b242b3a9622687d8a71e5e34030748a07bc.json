{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\ibmApp2\\\\frontend\\\\src\\\\pages\\\\StackExchangeHome.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport { NavLink } from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\nimport { useContext } from \"react\";\nimport { Appcontext } from \"../App\";\nimport ReadbyDoctorId from \"./Questions/MydoctorQns\";\nimport ReadbyPatientId from \"./Questions/MypatientQns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction StackExchangeHome() {\n  _s();\n  const {\n    user\n  } = useContext(Appcontext);\n\n  // Use the map function to iterate over the data and create components\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [[false].map(expand => /*#__PURE__*/_jsxDEV(Navbar, {\n      expand: expand,\n      className: \"bg-body-tertiary mb-3\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n          href: \"#\",\n          style: {\n            fontSize: \"27px\",\n            fontWeight: \"bold\",\n            textDecoration: \"underline\",\n            fontFamily: \"sans-serif\"\n          },\n          children: \"StackExchange for Health and Medicine-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/MyProfile\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            size: \"lg\",\n            style: {\n              fontFamily: \"sans-serif\",\n              display: 'flex'\n            },\n            children: \"Ask\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/MyProfile\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            size: \"lg\",\n            style: {\n              fontFamily: \"sans-serif\",\n              display: 'flex'\n            },\n            children: \"Search/readbyTags\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this)\n    }, expand, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)), user === \"doctor\" ? /*#__PURE__*/_jsxDEV(ReadbyDoctorId, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 28\n    }, this) : /*#__PURE__*/_jsxDEV(ReadbyPatientId, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 49\n    }, this)]\n  }, void 0, true);\n}\n_s(StackExchangeHome, \"y3FQDew7UyrSqYkvQcTdCsLbAB8=\");\n_c = StackExchangeHome;\nexport default StackExchangeHome;\nvar _c;\n$RefreshReg$(_c, \"StackExchangeHome\");","map":{"version":3,"names":["React","Container","Navbar","NavLink","Button","useContext","Appcontext","ReadbyDoctorId","ReadbyPatientId","jsxDEV","_jsxDEV","Fragment","_Fragment","StackExchangeHome","_s","user","children","map","expand","className","fluid","Brand","href","style","fontSize","fontWeight","textDecoration","fontFamily","fileName","_jsxFileName","lineNumber","columnNumber","to","variant","size","display","_c","$RefreshReg$"],"sources":["C:/Users/dell/ibmApp2/frontend/src/pages/StackExchangeHome.js"],"sourcesContent":["import React from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useContext } from \"react\";\r\nimport { Appcontext } from \"../App\";\r\nimport ReadbyDoctorId from \"./Questions/MydoctorQns\";\r\nimport ReadbyPatientId from \"./Questions/MypatientQns\";\r\n\r\nfunction StackExchangeHome() {\r\n  const { user } = useContext(Appcontext);\r\n\r\n  // Use the map function to iterate over the data and create components\r\n\r\n  return (\r\n    <>\r\n      {[false].map((expand) => (\r\n        <Navbar key={expand} expand={expand} className=\"bg-body-tertiary mb-3\">\r\n          <Container fluid>\r\n            <Navbar.Brand\r\n              href=\"#\"\r\n              style={{\r\n                fontSize: \"27px\",\r\n                fontWeight: \"bold\",\r\n                textDecoration: \"underline\",\r\n                fontFamily: \"sans-serif\",\r\n              }}\r\n            >\r\n              StackExchange for Health and Medicine-\r\n            </Navbar.Brand>\r\n            <NavLink to=\"/MyProfile\">\r\n              <Button\r\n                variant=\"secondary\"\r\n                size=\"lg\"\r\n                style={{ fontFamily: \"sans-serif\" ,display : 'flex'}}\r\n                \r\n              >\r\n                Ask\r\n              </Button>\r\n            </NavLink>\r\n            <NavLink to=\"/MyProfile\">\r\n              <Button\r\n                variant=\"secondary\"\r\n                size=\"lg\"\r\n                style={{ fontFamily: \"sans-serif\" ,display : 'flex'}}\r\n              >\r\n                Search/readbyTags\r\n              </Button>\r\n            </NavLink>\r\n          </Container>\r\n        </Navbar>\r\n      ))}\r\n      {user === \"doctor\" ? <ReadbyDoctorId /> : <ReadbyPatientId />}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default StackExchangeHome;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,SAASC,OAAO,QAAQ,kBAAkB;AAC1C,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,UAAU,QAAQ,QAAQ;AACnC,OAAOC,cAAc,MAAM,yBAAyB;AACpD,OAAOC,eAAe,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvD,SAASC,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EAC3B,MAAM;IAAEC;EAAK,CAAC,GAAGV,UAAU,CAACC,UAAU,CAAC;;EAEvC;;EAEA,oBACEI,OAAA,CAAAE,SAAA;IAAAI,QAAA,GACG,CAAC,KAAK,CAAC,CAACC,GAAG,CAAEC,MAAM,iBAClBR,OAAA,CAACR,MAAM;MAAcgB,MAAM,EAAEA,MAAO;MAACC,SAAS,EAAC,uBAAuB;MAAAH,QAAA,eACpEN,OAAA,CAACT,SAAS;QAACmB,KAAK;QAAAJ,QAAA,gBACdN,OAAA,CAACR,MAAM,CAACmB,KAAK;UACXC,IAAI,EAAC,GAAG;UACRC,KAAK,EAAE;YACLC,QAAQ,EAAE,MAAM;YAChBC,UAAU,EAAE,MAAM;YAClBC,cAAc,EAAE,WAAW;YAC3BC,UAAU,EAAE;UACd,CAAE;UAAAX,QAAA,EACH;QAED;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc,CAAC,eACfrB,OAAA,CAACP,OAAO;UAAC6B,EAAE,EAAC,YAAY;UAAAhB,QAAA,eACtBN,OAAA,CAACN,MAAM;YACL6B,OAAO,EAAC,WAAW;YACnBC,IAAI,EAAC,IAAI;YACTX,KAAK,EAAE;cAAEI,UAAU,EAAE,YAAY;cAAEQ,OAAO,EAAG;YAAM,CAAE;YAAAnB,QAAA,EAEtD;UAED;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACVrB,OAAA,CAACP,OAAO;UAAC6B,EAAE,EAAC,YAAY;UAAAhB,QAAA,eACtBN,OAAA,CAACN,MAAM;YACL6B,OAAO,EAAC,WAAW;YACnBC,IAAI,EAAC,IAAI;YACTX,KAAK,EAAE;cAAEI,UAAU,EAAE,YAAY;cAAEQ,OAAO,EAAG;YAAM,CAAE;YAAAnB,QAAA,EACtD;UAED;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC,GAhCDb,MAAM;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAiCX,CACT,CAAC,EACDhB,IAAI,KAAK,QAAQ,gBAAGL,OAAA,CAACH,cAAc;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAAGrB,OAAA,CAACF,eAAe;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAC7D,CAAC;AAEP;AAACjB,EAAA,CA9CQD,iBAAiB;AAAAuB,EAAA,GAAjBvB,iBAAiB;AAgD1B,eAAeA,iBAAiB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}